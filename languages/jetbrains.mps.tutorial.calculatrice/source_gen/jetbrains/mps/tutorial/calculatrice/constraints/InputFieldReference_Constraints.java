package jetbrains.mps.tutorial.calculatrice.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.SNodePointer;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class InputFieldReference_Constraints extends BaseConstraintsDescriptor {
  public InputFieldReference_Constraints() {
    super(CONCEPTS.InputFieldReference$VK);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.field$pHFz, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return ReferenceScopeProvider.fromHierarchy(CONCEPTS.InputField$KB, new SNodePointer("r:b07fe2a6-e2d8-46ad-9828-95d4a5954114(jetbrains.mps.tutorial.calculatrice.constraints)", "6234533224305121613"));
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept InputFieldReference$VK = MetaAdapterFactory.getConcept(0x882daca414b74170L, 0x873fdb338fe2df5cL, 0x568582ef7ecd97c8L, "jetbrains.mps.tutorial.calculatrice.structure.InputFieldReference");
    /*package*/ static final SConcept InputField$KB = MetaAdapterFactory.getConcept(0x882daca414b74170L, 0x873fdb338fe2df5cL, 0x568582ef7ecd97c6L, "jetbrains.mps.tutorial.calculatrice.structure.InputField");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink field$pHFz = MetaAdapterFactory.getReferenceLink(0x882daca414b74170L, 0x873fdb338fe2df5cL, 0x568582ef7ecd97c8L, 0x568582ef7ecd97d0L, "field");
  }
}
